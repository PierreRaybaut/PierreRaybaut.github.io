.. post:: Jul 20, 2024
   :tags: Conferences
   :author: Pierre Raybaut

SciPy 2024: My first SciPy conference
=====================================

This July 2024, I attended my first SciPy conference in Tacoma, Washington (US ðŸ‡ºðŸ‡¸).

.. figure:: 002-scipy2024-01-tacoma.jpg
   :width: 85%
   :alt: Tacoma, Washington
   
   Tacoma, Washington - and in the background, the majestic Mount Rainier

I had the privilege of representing `Codra <https://www.codra.net>`_, a French company specialized in industrial and scientific IT, and present a talk about `Spyder <https://www.spyder-ide.org>`_, `WinPython <https://winpython.github.io>`_, and `DataLab <https://datalab-platform.com>`_ - as well as a poster centered on the latter.

What follows is a brief summary of my experience at the conference, and some personal highlights. All of this is subjective, of course.

About the conference
--------------------

SciPy is a conference gathering attendees from industry, academia, and government to discuss the use of Python in scientific computing. It is divided into three parts: tutorials (2 days), conference (3 days), and sprints (2 days). I attended only the conference part, which includes talks, posters, lightning talks, a job fair, social events, and open spaces.

.. figure:: 002-scipy2024-02-convention-center.jpg
   :width: 75%
   :alt: Greater Tacoma Convention Center

   Greater Tacoma Convention Center, where SciPy 2024 was held

The 2024 edition was held at the Greater Tacoma Convention Center (near Seattle), a modern building with a large ball room for the main talks, and several smaller rooms for parallel sessions.

About the organization
----------------------

I was impressed by the quality of the organization: everything was well planned, from the registration process to the talks schedule, and the staff was very helpful and friendly. The conference was well attended, with about 800 participants (all categories combined), and the atmosphere was relaxed and convivial.

Organizers and volunteers were incredibly efficient and responsive, and the conference ran smoothly.

.. figure:: 002-scipy2024-03-ball-room.jpg
    :width: 75%
    :alt: Ball room
    
    Ball room at the Greater Tacoma Convention Center - Amazing how smoothly the conference ran with so many attendees!

Coming from France where the latin culture is predominant, I was impressed not only by the efficiency of the organization but also by the politeness and the respect of the rules by the attendees which clearly contributed to the success of the event.

.. figure:: 002-scipy2024-04-volunteers.jpg
   :width: 75%
   :alt: Some of the volunteers
   
   Some of the volunteers who helped make the conference a success

Personal highlights
-------------------

.. figure:: 002-scipy2024-05-tacoma-art-museum.jpg
   :width: 75%
   :alt: Attendee social event at the Tacoma Art Museum
   
   Attendee social event at the Tacoma Art Museum

The conference was a great experience for me, for several reasons:

- **Meeting the community**: I had the opportunity to meet in person many people I only knew online, such as the Spyder or Jupyter developers, and had interesting discussions with them.

- **Networking**: I met many people from various backgrounds, such as researchers, engineers or data scientists, and exchanged ideas with them.

- **Learning**: I attended many interesting talks about Python, scientific computing, or data science, and learned a lot from them.

- **Presenting**: I presented a talk about Spyder, WinPython, and DataLab, and a poster about the latter, and received positive feedback from the audience.

Some talks I attended
---------------------

Here are some talks I attended and found especially interesting (among many others), in chronological order.

Day 1
^^^^^

Here is a selection of talks I attended on the first day:

- `Keynote: The Right Tool for the Job <https://cfp.scipy.org/2024/talk/PD93HQ/>`_ by `Julia Silge <https://juliasilge.com/>`_ (from `Posit <https://posit.co/>`_, the company behind RStudio and Shiny). Among other things, Julia gave an interesting perspective on how she would handle a team with different technical backgrounds and preferences. She highlighted the fact that forcing everyone to use the same tools can be counterproductive, and that it is better to let people use the tools they are most comfortable with, as long as they are able to communicate and collaborate effectively. The main reason for this is that learning a new tool can be time-consuming and frustrating. It cannot be generalized of course - simply because when a project requires a specific technology (either because of performance, compatibility, or customer requirements), you can't just say "oh, it's fine if you use another one as long as you communicate effectively with the rest of the team" - but in the context of a data science team for example, it makes sense.

- `Dask in Production <https://cfp.scipy.org/2024/talk/NGRVJJ/>`_ by `Matthew Rocklin <https://matthewrocklin.com/>`_ (from `Coiled <https://www.coiled.io>`_): a talk about `Dask <https://www.dask.org/>`_, a parallel computing library, and its use in production environments. Technical and insightful: Dask is impressive, and Matthew is a great speaker - inspiring! Another talk was echoing this one: `Pandas + Dask DataFrame 2.0 - Comparison to Spark, DuckDB and Polars <https://cfp.scipy.org/2024/talk/79SXUF/>`_ by `James Bourbeau <https://www.jamesbourbeau.com/>`_ (`Coiled <https://www.coiled.io>`_), another great speaker but with a different style - Coiled has a great team, with a well-polished communication!

- `Teaching and Learning Scientific Computing in the age of ChatGPT <https://cfp.scipy.org/2024/talk/BAFG9A/>`_ by `Ryan C Cooper <https://cooperrc.github.io/>`_ (from University of Connecticut). Even if the talk was centered on education, it was fascinating to see how AI assistants like ChatGPT can impact the students' learning experience in a very similar way to workers' experience. I had an interesting discussion with Ryan after his talk, and I shared with him my experience with introducing AI assistant in the workplace, at Codra. In both cases, the AI assistant can help learning or solving problems as long as it is understood as a tool with limitations and caveats - but that's another story!

.. figure:: 002-scipy2024-06-LPython.jpg
   :width: 75%
   :alt: LPython, by OndÅ™ej ÄŒertÃ­k
   
   LPython: Novel, Fast, Retargetable Python Compiler â€” by OndÅ™ej ÄŒertÃ­k

- `LPython: Novel, Fast, Retargetable Python Compiler <https://cfp.scipy.org/2024/talk/7CUT9D/>`_ by `OndÅ™ej ÄŒertÃ­k <https://ondrejcertik.com/>`_ (from Microsoft) - as I already mentioned in social media, `LPython <https://lpython.org/>`_ is a very promising project. It is a Python compiler capable of executing Python code faster than CPython, thanks to extreme optimizations. OndÅ™ej brilliantly presented the project and its potential, emphasizing the singular performance of LPython: "if it's slower than C, it's a bug" - I like that attitude!

- `No-Code-Change GPU Acceleration for Your Pandas and NetworkX Workflows <https://cfp.scipy.org/2024/talk/KTZHZM/>`_ by `Rick Ratzel <https://developer.nvidia.com/blog/author/rratzel/>`_ and `Vyas Ramasubramani <https://vyasr.com/>`_ (from `RAPIDS <https://rapids.ai/>`_ team at NVIDIA). This talk was about `cuDF <https://docs.rapids.ai/api/cudf/stable/>`_ and `cuGraph <https://docs.rapids.ai/api/cugraph/stable/>`_, two libraries from the `RAPIDS <https://rapids.ai/>`_ suite that provide GPU-accelerated dataframes and graph analytics. The performance gains are impressive... without changing a single line of code! (for example, the ``pandas`` import is automatically replaced by ``cudf``: no need to change anything in your code).

Day 2
^^^^^

On the second day, among others, I attended the following talks:

- `Keynote: Explainable AI for Climate Science: Opening the black box to reveal planet earth <https://cfp.scipy.org/2024/talk/7GEVPA/>`_ by `Elizabeth Barnes <https://www.atmos.colostate.edu/people/faculty/barnes/>`_ (from Colorado State University). A fascinating talk about a fascinating subject: climate science. Elizabeth explained how AI can help climate scientists to better understand the Earth's climate system, while insisting on the importance of explainability (a very illustrative example was given: a model recognizing horses in pictures but that was actually trained on samples of horses systematically photographed with a specific label in the corner of the picture - the model was actually recognizing the label, not the horses!). She also shown how little initial conditions variations can lead to very different climate predictions, again with very illustrative examples. Elizabeth is certainly used to giving talks, but she is also a gifted speaker.

- `Making Research Data Flow with Python <https://cfp.scipy.org/2024/talk/X9JUXN/>`_ by `Josh Borrow <https://joshborrow.com/>`_ (from Simons Observatory, University of Pennsylvania). This was the first SciPy participation of Josh, and I know that because he told me right before his talk (my own talk was just after his): otherwise, I would have never guessed it because he was so confident and professional. Another great talk, about a framework named `librarian <https://github.com/simonsobs/librarian>`_ that handles data transfer orchestration for Simons Observatory, using Python, `FastAPI <https://fastapi.tiangolo.com/>`_, `PostgreSQL <https://www.postgresql.org/>`_, and `Globus <https://www.globus.org/>`_.

- After that, I gave my own talk: `From Spyder to DataLab: 15 years of scientific software crafting in Python <https://cfp.scipy.org/2024/talk/G3MC9L/>`_. I was not quite satisfied with my performance... but I'm never good enough for myself, so I'm used to it! ðŸ˜Š

- Birds-of-a-Feather (BoF) session: `What would you like to see in your scientific IDE? <https://cfp.scipy.org/2024/talk/VWMV7B/>`_ by `C.A.M. Gerlach <https://github.com/CAM-Gerlach>`_ (Python and `Spyder <https://www.spyder-ide.org>`_ core developer):

  -  I was really touched by CAM's introduction: he said something like "We have the creator of Spyder in the room, Pierre Raybaut" - this certainly was perceived as insignificant by most of the attendees, but it had a very singular meaning for me, as I was suddenly getting conscious of the impact of my work on the community. I was also very happy to see that the Spyder community is so active and that the project is in good hands (I'm of course including `Carlos CÃ³rdoba <https://github.com/ccordoba12>`_ in this statement, who is the current maintainer of Spyder).
  - This BoF gathered in the same room people from different backgrounds (researchers, engineers, data scientists, students, etc.) and with different needs and expectations regarding their scientific IDE (adepts of Jupyter, Spyder, VSCode, ...). Many interesting ideas were shared - for example, the relevance of AI assistants in the IDE which surprisingly (for me) was not a consensus among the attendees. *Unfortunately, I assisted only passively to this BoF because I was completely jet-lagged...*

.. note::

   Birds-of-a-Feather (BoF) sessions are informal gatherings of people around a specific topic. They are a great way to meet people with similar interests and discuss ideas. 
   This was the first time I attended a BoF session, and I found it very interesting. I hope that I will be able to participate more actively next time!

.. figure:: 002-scipy2024-07-anywidget.jpg
   :width: 75%
   :alt: anywidget, by Trevor Manz
   
   anywidget: custom Jupyter Widgets made easy â€” by Trevor Manz

- `anywidget: custom Jupyter Widgets made easy <https://cfp.scipy.org/2024/talk/UMNVPH/>`_ by `Trevor Manz <https://hidivelab.org/team/members/trevor-manz/>`_ (from `HIDIve Lab <https://hidivelab.org/>`_). Trevor presented `anywidget <https://github.com/manzt/anywidget>`_, a library for creating custom Jupyter widgets easily that has become *the* reference in this domain for a few months. Even if I already saw the library in action and was familiar with the demo, this talk was a great opportunity to hear from the maintainer himself and helped realize the impact of this library on the Jupyter ecosystem.

Day 3
^^^^^

On the third day, I was there only in the morning (I had to leave early to catch my flight).
Here is a selection of talks I attended:

- `Keynote: Particles, People, and Pull Requests <https://cfp.scipy.org/2024/talk/B8EXNV/>`_ by `Kyle Cranmer <https://www.physics.wisc.edu/directory/cranmer-kyle/>`_ (from University of Wisconsin-Madisonâ€™s Data Science Institute). Kyle gave an interesting talk that would be far too long to summarize here. It was dense but very fluid and well-structured. It is amazing to see how much can be done with open-source computing tools when such a vast community is involved towards a common goal. The evocation of `ROOT <https://root.cern.ch/>`_ made me smile as I had the opportunity to work with it on a project at Codra a couple of years ago, helping a customer to migrate from ROOT to Python. Tons of other tools, mostly Python-based, were mentioned, but that's another story!

.. figure:: 002-scipy2024-08-spyder.jpg
   :width: 75%
   :alt: Spyder, by C.A.M. Gerlach
   
   Spyder: The Scientific Python Development Environment â€” by C.A.M. Gerlach

- During the *SciPy Tools Plenary*, I was positively surprised by the presentation of `Spyder <https://www.spyder-ide.org>`_ by `C.A.M. Gerlach <https://github.com/CAM-Gerlach>`_: CAM presented the project with such energy and enthousiasm that I was really proud to see that the project I created 15 years ago is still alive and kicking! Again, this situation was almost unreal for me: I was in the audience, listening to someone presenting my own project, and I was so happy to see that the project is in good hands and that the community is so active. Kudos to the Spyder team for keeping the project in such a good shape!

- `Scikit-build-core: A modern build-backend for CPython C/C++/Fortran/Cython extensions <https://cfp.scipy.org/2024/talk/TSNQJT/>`_ by `Jean-Christophe Fillion-Robin <https://www.kitware.com/jean-christophe-fillion-robin/>`_ (from `Kitware <https://www.kitware.com/>`_). Jean-Christophe presented `scikit-build-core <https://github.com/scikit-build/scikit-build-core>`_, a modern build system for Python C/C++/Fortran/Cython extensions. This talk was as much technical as it was clear. It surely gave me some ideas for improving the build system of some of projects I'm involved in (e.g. `PlotPy <https://github.com/PlotPyStack/plotpy>`_ which has both C++ and Cython extensions).

About Lightning Talks
---------------------

That's an experience in itself!

Lightning talks are short talks (5 minutes) given by attendees about any topic they want. Funny, serious, technical, personal, etc. - anything goes! Judiciously placed at the end of the day, they are a great way to relax and have fun after a long day of talks.

I think I will try and give one next time! I already have some ideas...

Final thoughts
--------------

.. image:: 002-scipy2024-09-spyder-t-shirt.jpg
   :width: 30%
   :alt: My Spyder t-shirt
   :align: right

I had a great time at SciPy 2024, and I'm looking forward to attending the next edition.
I certainly learned a lot, met interesting people, and had fun.

But most importantly, I felt part of a community, and that's what matters the most to me...
...no, sorry, most importantly, I got a cool Spyder t-shirt! (thanks to the Spyder team for the gift!)